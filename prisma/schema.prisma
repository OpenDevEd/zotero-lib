// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL_POST")
  relationMode = "prisma"
}

model groups {
  id           Int            @id
  version      Int
  itemsVersion Int
  createdAt    DateTime
  updatedAt    DateTime
  items        items[]
  alsoKnownAs  alsoKnownAs[]
  itemsArchive itemsArchive[]
}

model items {
  id               String             @id
  version          Int
  data             Json
  inconsistent     Boolean?
  group_id         Int
  group            groups             @relation(fields: [group_id], references: [id])
  createdAt        DateTime
  updatedAt        DateTime
  isDeleted        Boolean            @default(false)
  collection_items collection_items[]
  alsoKnownAs      alsoKnownAs[]

  @@index([group_id])
}

model itemsArchive {
  row_id           Int                @id @default(autoincrement())
  id               String             @unique
  version          Int
  data             Json
  inconsistent     Boolean?           @default(false)
  group_id         Int
  group            groups             @relation(fields: [group_id], references: [id])
  createdAt        DateTime
  updatedAt        DateTime
  isDeleted        Boolean            @default(false)
  collection_items collection_items[]
  alsoKnownAs      alsoKnownAs[]

  @@index([group_id])
}

model collections {
  id               String             @id
  createdAt        DateTime
  updatedAt        DateTime
  collection_items collection_items[]
}

model collection_items {
  id             Int           @id @default(autoincrement())
  createdAt      DateTime
  updatedAt      DateTime
  collection_id  String
  collection     collections   @relation(fields: [collection_id], references: [id])
  item_id        String
  item           items         @relation(fields: [item_id], references: [id])
  itemsArchive   itemsArchive? @relation(fields: [itemsArchiveId], references: [id])
  itemsArchiveId String?

  @@index([collection_id])
  @@index([item_id])
  @@index([itemsArchiveId])
}

model alsoKnownAs {
  id             Int           @id @default(autoincrement())
  item_id        String
  item           items         @relation(fields: [item_id], references: [id], onDelete: Cascade)
  group_id       Int
  group          groups        @relation(fields: [group_id], references: [id])
  createdAt      DateTime
  updatedAt      DateTime
  data           String
  isDeleted      Boolean       @default(false)
  itemsArchive   itemsArchive? @relation(fields: [itemsArchiveId], references: [id])
  itemsArchiveId String?

  @@index([item_id])
  @@index([group_id])
  @@index([itemsArchiveId])
}
